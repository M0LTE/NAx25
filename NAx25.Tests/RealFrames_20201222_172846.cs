using FluentAssertions;
using System.Linq;
using Xunit;

namespace NAx25.Tests
{
    public class RealFrames_20201222_172846
    {
        [Fact]
        public void RealFrame_1()
        {
            var testData = new byte[] {
                0xaa, 0xa2, 0xa2, 0xae, 0xaa, 0xae, 0x60, 0x9a,  // ......`.
                0x60, 0xb2, 0x9a, 0x82, 0x40, 0xf2, 0x9a, 0x84,  // `...@...
                0x6e, 0xaa, 0x94, 0x40, 0xe0, 0xae, 0x92, 0x88,  // n..@....
                0x8a, 0x62, 0x40, 0xe0, 0x9a, 0x84, 0x6e, 0xaa,  // .b@...n.
                0x8e, 0x40, 0xe0, 0xae, 0x92, 0x88, 0x8a, 0x64,  // .@.....d
                0x40, 0xe1, 0x03, 0xf0, 0x60, 0x76, 0x49, 0x3c,  // @...`vI<
                0x6c, 0x5e, 0x5b, 0x76, 0x5c, 0x60, 0x22, 0x34,  // l^[v\`"4
                0x5d, 0x7d, 0x77, 0x77, 0x77, 0x2e, 0x6d, 0x30,  // ]}www.m0
                0x79, 0x6d, 0x61, 0x2e, 0x75, 0x6b, 0x20, 0x20,  // yma.uk  
                0x20, 0x20, 0x56, 0x58, 0x38, 0x44, 0x45, 0x5f,  //   VX8DE_
                0x20, 0x0d,  //  .
            };
            Frame.TryParse(testData, out var frame);
            Asserts.GenericAprs(frame);
        }

        [Fact]
        public void RealFrame_2()
        {
            var testData = new byte[] {
                0x82, 0xa0, 0x84, 0xa0, 0xa2, 0x62, 0x60, 0x9a,  // .....b`.
                0x60, 0x92, 0xa0, 0xaa, 0x40, 0x66, 0x9a, 0x84,  // `...@f..
                0x6e, 0xaa, 0x94, 0x40, 0xe0, 0xae, 0x92, 0x88,  // n..@....
                0x8a, 0x62, 0x40, 0xe0, 0x9a, 0x84, 0x6e, 0xaa,  // .b@...n.
                0x8e, 0x40, 0xe0, 0xae, 0x92, 0x88, 0x8a, 0x64,  // .@.....d
                0x40, 0xe1, 0x03, 0xf0, 0x3d, 0x35, 0x31, 0x33,  // @...=513
                0x37, 0x2e, 0x36, 0x34, 0x4e, 0x31, 0x30, 0x30,  // 7.64N100
                0x30, 0x30, 0x31, 0x2e, 0x32, 0x32, 0x45, 0x23,  // 001.22E#
                0x44, 0x69, 0x67, 0x69, 0x20, 0x69, 0x47, 0x61,  // Digi iGa
                0x74, 0x65,  // te
            };
            Frame.TryParse(testData, out var frame);
            Asserts.GenericAprs(frame);
        }

        [Fact]
        public void RealFrame_3()
        {
            var testData = new byte[] {
                0x92, 0x88, 0x40, 0x40, 0x40, 0x40, 0x60, 0x9a,  // ..@@@@`.
                0x84, 0x6e, 0xaa, 0x8e, 0x40, 0x60, 0xae, 0x92,  // .n..@`..
                0x88, 0x8a, 0x66, 0x40, 0x67, 0x03, 0xf0, 0x4d,  // ..f@g..M
                0x42, 0x37, 0x55, 0x47, 0x2f, 0x52, 0x20, 0x41,  // B7UG/R A
                0x4c, 0x54, 0x4f, 0x4e, 0x2f, 0x44, 0x0d,  // LTON/D.
            };
            Frame.TryParse(testData, out var frame);
            Asserts.GenericAprs(frame);
        }

        [Fact]
        public void RealFrame_4()
        {
            var testData = new byte[] {
                0x84, 0x8a, 0x82, 0x86, 0x9e, 0x9c, 0x60, 0x9a,  // ......`.
                0x84, 0x6e, 0xaa, 0x8e, 0x40, 0x60, 0xae, 0x92,  // .n..@`..
                0x88, 0x8a, 0x66, 0x40, 0x67, 0x03, 0xf0, 0x21,  // ..f@g..!
                0x35, 0x31, 0x31, 0x31, 0x2e, 0x33, 0x34, 0x4e,  // 5111.34N
                0x2f, 0x30, 0x30, 0x30, 0x35, 0x38, 0x2e, 0x31,  // /00058.1
                0x39, 0x57, 0x23, 0x52, 0x41, 0x59, 0x4e, 0x45,  // 9W#RAYNE
                0x54, 0x20, 0x41, 0x6c, 0x74, 0x6f, 0x6e, 0x2c,  // T Alton,
                0x20, 0x48, 0x61, 0x6d, 0x70, 0x73, 0x68, 0x69,  //  Hampshi
                0x72, 0x65, 0x2e, 0x20, 0x28, 0x67, 0x37, 0x67,  // re. (g7g
                0x6d, 0x6e, 0x40, 0x61, 0x6f, 0x6c, 0x2e, 0x63,  // mn@aol.c
                0x6f, 0x6d, 0x29, 0x0d,  // om).
            };
            Frame.TryParse(testData, out var frame);
            Asserts.GenericAprs(frame);
        }

        [Fact]
        public void RealFrame_5()
        {
            var testData = new byte[] {
                0x92, 0x88, 0x40, 0x40, 0x40, 0x40, 0x60, 0x9c,  // ..@@@@`.
                0x40, 0x40, 0x40, 0x40, 0x40, 0x61, 0x03, 0xf0,  // @@@@@a..
                0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x20,  // Network 
                0x4e, 0x6f, 0x64, 0x65, 0x0d,  // Node.
            };
            Frame.TryParse(testData, out var frame);
            Asserts.GenericAprs(frame);
        }

        [Fact]
        public void RealFrame_6()
        {
            var testData = new byte[] {
                0x82, 0xa0, 0x9a, 0x92, 0x60, 0x6c, 0x60, 0x9a,  // ....`l`.
                0x60, 0x8e, 0xa2, 0xa6, 0x40, 0x60, 0xae, 0x92,  // `...@`..
                0x88, 0x8a, 0x64, 0x40, 0x65, 0x03, 0xf0, 0x40,  // ..d@e..@
                0x32, 0x32, 0x31, 0x37, 0x33, 0x30, 0x7a, 0x35,  // 221730z5
                0x31, 0x32, 0x36, 0x2e, 0x32, 0x37, 0x4e, 0x2f,  // 126.27N/
                0x30, 0x30, 0x30, 0x35, 0x37, 0x2e, 0x38, 0x33,  // 00057.83
                0x57, 0x2d, 0x57, 0x58, 0x33, 0x69, 0x6e, 0x31,  // W-WX3in1
                0x50, 0x6c, 0x75, 0x73, 0x32, 0x2e, 0x30, 0x20,  // Plus2.0 
                0x55, 0x3d, 0x31, 0x34, 0x2e, 0x31, 0x56, 0x2c,  // U=14.1V,
                0x20, 0x54, 0x3d, 0x33, 0x30, 0x2e, 0x30, 0x43,  //  T=30.0C
            };
            Frame.TryParse(testData, out var frame);
            Asserts.GenericAprs(frame);
        }

        [Fact]
        public void RealFrame_7()
        {
            var testData = new byte[] {
                0x82, 0xa0, 0x9a, 0x92, 0x60, 0x6c, 0x60, 0x9a,  // ....`l`.
                0x60, 0x8e, 0xa2, 0xa6, 0x40, 0x60, 0x9a, 0x84,  // `...@`..
                0x6e, 0xaa, 0x8e, 0x40, 0xe0, 0xae, 0x92, 0x88,  // n..@....
                0x8a, 0x64, 0x40, 0x63, 0x03, 0xf0, 0x40, 0x32,  // .d@c..@2
                0x32, 0x31, 0x37, 0x33, 0x30, 0x7a, 0x35, 0x31,  // 21730z51
                0x32, 0x36, 0x2e, 0x32, 0x37, 0x4e, 0x2f, 0x30,  // 26.27N/0
                0x30, 0x30, 0x35, 0x37, 0x2e, 0x38, 0x33, 0x57,  // 0057.83W
                0x2d, 0x57, 0x58, 0x33, 0x69, 0x6e, 0x31, 0x50,  // -WX3in1P
                0x6c, 0x75, 0x73, 0x32, 0x2e, 0x30, 0x20, 0x55,  // lus2.0 U
                0x3d, 0x31, 0x34, 0x2e, 0x31, 0x56, 0x2c, 0x20,  // =14.1V, 
                0x54, 0x3d, 0x33, 0x30, 0x2e, 0x30, 0x43,  // T=30.0C
            };
            Frame.TryParse(testData, out var frame);
            Asserts.GenericAprs(frame);
        }

        [Fact]
        public void RealFrame_8()
        {
            var testData = new byte[] {
                0x82, 0xa0, 0xaa, 0x64, 0x6a, 0x9c, 0x60, 0x9a,  // ...dj.`.
                0x6a, 0x98, 0x9a, 0xb2, 0x40, 0xe0, 0x9a, 0x84,  // j...@...
                0x6e, 0xaa, 0x8e, 0x40, 0xe0, 0xae, 0x92, 0x88,  // n..@....
                0x8a, 0x6a, 0x40, 0x69, 0x03, 0xf0, 0x3e, 0x32,  // .j@i..>2
                0x37, 0x32, 0x32, 0x32, 0x39, 0x7a, 0x55, 0x49,  // 72229zUI
                0x2d, 0x56, 0x69, 0x65, 0x77, 0x33, 0x32, 0x20,  // -View32 
                0x56, 0x32, 0x2e, 0x30, 0x33, 0x0d,  // V2.03.
            };
            Frame.TryParse(testData, out var frame);
            Asserts.GenericAprs(frame);
        }

        [Fact]
        public void RealFrame_9()
        {
            var testData = new byte[] {
                0xaa, 0xa2, 0xa2, 0xae, 0xa8, 0xaa, 0x60, 0x9a,  // ......`.
                0x60, 0xb2, 0x9a, 0x82, 0x40, 0xf2, 0x9a, 0x84,  // `...@...
                0x6e, 0xaa, 0x8e, 0x40, 0xe0, 0xae, 0x92, 0x88,  // n..@....
                0x8a, 0x62, 0x40, 0xe0, 0xae, 0x92, 0x88, 0x8a,  // .b@.....
                0x64, 0x40, 0x63, 0x03, 0xf0, 0x60, 0x76, 0x49,  // d@c..`vI
                0x31, 0x6e, 0x35, 0x68, 0x76, 0x5c, 0x60, 0x22,  // 1n5hv\`"
                0x34, 0x62, 0x7d, 0x77, 0x77, 0x77, 0x2e, 0x6d,  // 4b}www.m
                0x30, 0x79, 0x6d, 0x61, 0x2e, 0x75, 0x6b, 0x20,  // 0yma.uk 
                0x20, 0x20, 0x20, 0x56, 0x58, 0x38, 0x44, 0x45,  //    VX8DE
                0x5f, 0x20, 0x0d,  // _ .
            };
            Frame.TryParse(testData, out var frame);
            Asserts.GenericAprs(frame);
        }

        [Fact]
        public void RealFrame_10()
        {
            var testData = new byte[] {
                0x84, 0x8a, 0x82, 0x86, 0x9e, 0x9c, 0x60, 0x9a,  // ......`.
                0x84, 0x6e, 0xaa, 0xa0, 0x40, 0x60, 0x9a, 0x84,  // .n..@`..
                0x6e, 0xaa, 0x8e, 0x40, 0xe0, 0xae, 0x92, 0x88,  // n..@....
                0x8a, 0x68, 0x40, 0x67, 0x03, 0xf0, 0x54, 0x23,  // .h@g..T#
                0x32, 0x31, 0x38, 0x2c, 0x31, 0x38, 0x36, 0x2c,  // 218,186,
                0x32, 0x35, 0x35, 0x2c, 0x31, 0x32, 0x39, 0x2c,  // 255,129,
                0x30, 0x36, 0x32, 0x2c, 0x31, 0x31, 0x39, 0x2c,  // 062,119,
                0x31, 0x30, 0x30, 0x31, 0x30, 0x31, 0x31, 0x31,  // 10010111
                0x0d,  // .
            };
            Frame.TryParse(testData, out var frame);
            Asserts.GenericAprs(frame);
        }

        [Fact]
        public void RealFrame_11()
        {
            var testData = new byte[] {
                0xaa, 0xa2, 0xa2, 0xae, 0xa6, 0xa4, 0x60, 0x9a,  // ......`.
                0x60, 0xb2, 0x9a, 0x82, 0x40, 0xf2, 0x9a, 0x84,  // `...@...
                0x6e, 0xaa, 0x8e, 0x40, 0xe0, 0xae, 0x92, 0x88,  // n..@....
                0x8a, 0x62, 0x40, 0xe0, 0xae, 0x92, 0x88, 0x8a,  // .b@.....
                0x64, 0x40, 0x63, 0x03, 0xf0, 0x60, 0x76, 0x49,  // d@c..`vI
                0x43, 0x6f, 0x40, 0x61, 0x76, 0x5c, 0x60, 0x22,  // Co@av\`"
                0x34, 0x57, 0x7d, 0x77, 0x77, 0x77, 0x2e, 0x6d,  // 4W}www.m
                0x30, 0x79, 0x6d, 0x61, 0x2e, 0x75, 0x6b, 0x20,  // 0yma.uk 
                0x20, 0x20, 0x20, 0x56, 0x58, 0x38, 0x44, 0x45,  //    VX8DE
                0x5f, 0x20, 0x0d,  // _ .
            };
            Frame.TryParse(testData, out var frame);
            Asserts.GenericAprs(frame);
        }

        [Fact]
        public void RealFrame_12()
        {
            var testData = new byte[] {
                0x84, 0x8a, 0x82, 0x86, 0x9e, 0x9c, 0x60, 0x9a,  // ......`.
                0x84, 0x6e, 0xaa, 0x94, 0x40, 0x60, 0x9a, 0x84,  // .n..@`..
                0x6e, 0xaa, 0x8e, 0x40, 0xe0, 0xae, 0x92, 0x88,  // n..@....
                0x8a, 0x68, 0x40, 0x67, 0x03, 0xf0, 0x3a, 0x4d,  // .h@g..:M
                0x42, 0x37, 0x55, 0x4a, 0x20, 0x20, 0x20, 0x20,  // B7UJ    
                0x3a, 0x42, 0x49, 0x54, 0x53, 0x2e, 0x31, 0x31,  // :BITS.11
                0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x2c, 0x54,  // 111111,T
                0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79,  // elemetry
                0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x4d, 0x42,  //  from MB
                0x37, 0x55, 0x4a, 0x0d,  // 7UJ.
            };
            Frame.TryParse(testData, out var frame);
            Asserts.GenericAprs(frame);
        }

        [Fact]
        public void RealFrame_13()
        {
            var testData = new byte[] {
                0xaa, 0xa2, 0xa2, 0xae, 0xa6, 0xaa, 0x60, 0x9a,  // ......`.
                0x60, 0xb2, 0x9a, 0x82, 0x40, 0xf2, 0x9a, 0x84,  // `...@...
                0x6e, 0xaa, 0x8e, 0x40, 0xe0, 0xae, 0x92, 0x88,  // n..@....
                0x8a, 0x62, 0x40, 0xe0, 0xae, 0x92, 0x88, 0x8a,  // .b@.....
                0x64, 0x40, 0x63, 0x03, 0xf0, 0x60, 0x76, 0x49,  // d@c..`vI
                0x59, 0x6d, 0x7d, 0x41, 0x76, 0x5c, 0x60, 0x22,  // Ym}Av\`"
                0x34, 0x59, 0x7d, 0x77, 0x77, 0x77, 0x2e, 0x6d,  // 4Y}www.m
                0x30, 0x79, 0x6d, 0x61, 0x2e, 0x75, 0x6b, 0x20,  // 0yma.uk 
                0x20, 0x20, 0x20, 0x56, 0x58, 0x38, 0x44, 0x45,  //    VX8DE
                0x5f, 0x20, 0x0d,  // _ .
            };
            Frame.TryParse(testData, out var frame);
            Asserts.GenericAprs(frame);
        }

        [Fact]
        public void RealFrame_14()
        {
            var testData = new byte[] {
                0x82, 0xa0, 0xaa, 0x64, 0x6a, 0x9c, 0xe0, 0x8e,  // ...dj...
                0x66, 0x9e, 0x94, 0xb4, 0x40, 0x60, 0x9a, 0x84,  // f...@`..
                0x6e, 0xaa, 0xa6, 0x84, 0xe0, 0xae, 0x92, 0x88,  // n.......
                0x8a, 0x62, 0x40, 0xe0, 0x9a, 0x84, 0x6e, 0xac,  // .b@...n.
                0x82, 0x40, 0xe0, 0x9a, 0x84, 0x6e, 0xaa, 0x8e,  // .@...n..
                0x40, 0xe0, 0xae, 0x92, 0x88, 0x8a, 0x64, 0x40,  // @.....d@
                0xe1, 0x03, 0xf0, 0x3e, 0x32, 0x30, 0x32, 0x32,  // ...>2022
                0x31, 0x36, 0x7a, 0x44, 0x69, 0x67, 0x69, 0x20,  // 16zDigi 
                0x66, 0x6f, 0x72, 0x20, 0x20, 0x32, 0x30, 0x20,  // for  20 
                0x79, 0x65, 0x61, 0x72, 0x73, 0x20, 0x20, 0x73,  // years  s
                0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x20, 0x53,  // erving S
                0x45, 0x20, 0x4b, 0x65, 0x6e, 0x74, 0x20, 0x48,  // E Kent H
                0x32, 0x34, 0x2e, 0x0d,  // 24..
            };
            Frame.TryParse(testData, out var frame);
            Asserts.GenericAprs(frame);
        }

        [Fact]
        public void RealFrame_15()
        {
            var testData = new byte[] {
                0x82, 0xa0, 0xaa, 0x64, 0x6a, 0x9c, 0xe0, 0x8e,  // ...dj...
                0x60, 0xae, 0xb2, 0x8e, 0x40, 0x60, 0x9a, 0x84,  // `...@`..
                0x6e, 0xaa, 0x94, 0x40, 0xe0, 0x9a, 0x84, 0x6e,  // n..@...n
                0xaa, 0x8e, 0x40, 0xe0, 0xae, 0x92, 0x88, 0x8a,  // ..@.....
                0x64, 0x40, 0xe1, 0x03, 0xf0, 0x3b, 0x45, 0x4c,  // d@...;EL
                0x2d, 0x67, 0x30, 0x77, 0x79, 0x67, 0x20, 0x2a,  // -g0wyg *
                0x32, 0x32, 0x31, 0x37, 0x33, 0x32, 0x7a, 0x35,  // 221732z5
                0x31, 0x32, 0x35, 0x2e, 0x36, 0x35, 0x4e, 0x45,  // 125.65NE
                0x30, 0x30, 0x30, 0x30, 0x30, 0x2e, 0x36, 0x39,  // 00000.69
                0x45, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,  // E0000000
                0x2f, 0x31, 0x30, 0x33, 0x20, 0x4f, 0x6e, 0x20,  // /103 On 
                0x20, 0x40, 0x31, 0x37, 0x33, 0x32, 0x20, 0x37,  //  @1732 7
                0x33, 0x0d,  // 3.
            };
            Frame.TryParse(testData, out var frame);
            Asserts.GenericAprs(frame);
        }

        [Fact]
        public void RealFrame_16()
        {
            var testData = new byte[] {
                0xaa, 0xa2, 0xa2, 0xae, 0xa8, 0xa8, 0x60, 0x9a,  // ......`.
                0x60, 0xb2, 0x9a, 0x82, 0x40, 0xf2, 0x9a, 0x84,  // `...@...
                0x6e, 0xaa, 0x8e, 0x40, 0xe0, 0xae, 0x92, 0x88,  // n..@....
                0x8a, 0x62, 0x40, 0xe0, 0xae, 0x92, 0x88, 0x8a,  // .b@.....
                0x64, 0x40, 0x63, 0x03, 0xf0, 0x60, 0x76, 0x49,  // d@c..`vI
                0x5e, 0x6d, 0x34, 0x75, 0x76, 0x5c, 0x60, 0x22,  // ^m4uv\`"
                0x34, 0x5f, 0x7d, 0x77, 0x77, 0x77, 0x2e, 0x6d,  // 4_}www.m
                0x30, 0x79, 0x6d, 0x61, 0x2e, 0x75, 0x6b, 0x20,  // 0yma.uk 
                0x20, 0x20, 0x20, 0x56, 0x58, 0x38, 0x44, 0x45,  //    VX8DE
                0x5f, 0x20, 0x0d,  // _ .
            };
            Frame.TryParse(testData, out var frame);
            Asserts.GenericAprs(frame);
        }

        [Fact]
        public void RealFrame_17()
        {
            var testData = new byte[] {
                0x92, 0x88, 0x40, 0x40, 0x40, 0x40, 0x60, 0x9a,  // ..@@@@`.
                0x84, 0x6e, 0xaa, 0x94, 0x40, 0x60, 0x9a, 0x84,  // .n..@`..
                0x6e, 0xaa, 0x8e, 0x40, 0xe0, 0xae, 0x92, 0x88,  // n..@....
                0x8a, 0x68, 0x40, 0x67, 0x03, 0xf0, 0x4d, 0x42,  // .h@g..MB
                0x37, 0x55, 0x4a, 0x2f, 0x52, 0x20, 0x4d, 0x42,  // 7UJ/R MB
                0x37, 0x55, 0x4a, 0x2f, 0x44, 0x0d,  // 7UJ/D.
            };
            Frame.TryParse(testData, out var frame);
            Asserts.GenericAprs(frame);
        }

        [Fact]
        public void RealFrame_18()
        {
            var testData = new byte[] {
                0xaa, 0x62, 0xa6, 0xaa, 0xa8, 0xa8, 0x60, 0x9a,  // .b....`.
                0x62, 0xa4, 0x94, 0x98, 0x40, 0xea, 0x9a, 0x84,  // b...@...
                0x6e, 0xaa, 0x8e, 0x40, 0xe0, 0xae, 0x92, 0x88,  // n..@....
                0x8a, 0x62, 0x40, 0xe0, 0xae, 0x92, 0x88, 0x8a,  // .b@.....
                0x64, 0x40, 0x63, 0x03, 0xf0, 0x60, 0x77, 0x36,  // d@c..`w6
                0x47, 0x6c, 0x20, 0x1c, 0x3e, 0x2f, 0x60, 0x22,  // Gl .>/`"
                0x35, 0x21, 0x7d, 0x57, 0x61, 0x6e, 0x74, 0x61,  // 5!}Wanta
                0x67, 0x65, 0x2c, 0x20, 0x4f, 0x78, 0x66, 0x6f,  // ge, Oxfo
                0x72, 0x64, 0x73, 0x68, 0x69, 0x72, 0x65, 0x5f,  // rdshire_
                0x25, 0x0d,  // %.
            };
            Frame.TryParse(testData, out var frame);
            Asserts.GenericAprs(frame);
        }

        [Fact]
        public void RealFrame_19()
        {
            var testData = new byte[] {
                0xaa, 0xa2, 0xa2, 0xae, 0xa8, 0xac, 0x60, 0x9a,  // ......`.
                0x60, 0xb2, 0x9a, 0x82, 0x40, 0xf2, 0x9a, 0x84,  // `...@...
                0x6e, 0xaa, 0x8e, 0x40, 0xe0, 0xae, 0x92, 0x88,  // n..@....
                0x8a, 0x62, 0x40, 0xe0, 0xae, 0x92, 0x88, 0x8a,  // .b@.....
                0x64, 0x40, 0x63, 0x03, 0xf0, 0x60, 0x76, 0x49,  // d@c..`vI
                0x58, 0x6c, 0x21, 0x1f, 0x76, 0x5c, 0x60, 0x22,  // Xl!.v\`"
                0x34, 0x4c, 0x7d, 0x77, 0x77, 0x77, 0x2e, 0x6d,  // 4L}www.m
                0x30, 0x79, 0x6d, 0x61, 0x2e, 0x75, 0x6b, 0x20,  // 0yma.uk 
                0x20, 0x20, 0x20, 0x56, 0x58, 0x38, 0x44, 0x45,  //    VX8DE
                0x5f, 0x20, 0x0d,  // _ .
            };
            Frame.TryParse(testData, out var frame);
            Asserts.GenericAprs(frame);
        }

        [Fact]
        public void RealFrame_20()
        {
            var testData = new byte[] {
                0xaa, 0xa2, 0xaa, 0xa2, 0xa0, 0xa8, 0x60, 0x9a,  // ......`.
                0x60, 0xae, 0x84, 0x82, 0x40, 0xe0, 0x8e, 0x68,  // `...@..h
                0x8e, 0xac, 0xb4, 0x40, 0xe0, 0x9a, 0x84, 0x6e,  // ...@...n
                0xaa, 0xa6, 0xae, 0xe0, 0x9a, 0x84, 0x6e, 0xaa,  // ......n.
                0x8e, 0x40, 0xe0, 0xae, 0x92, 0x88, 0x8a, 0x64,  // .@.....d
                0x40, 0xe1, 0x03, 0xf0, 0x27, 0x78, 0x2b, 0x34,  // @...'x+4
                0x6c, 0x20, 0x1c, 0x2d, 0x2f, 0x5d, 0x22, 0x33,  // l .-/]"3
                0x72, 0x7d, 0x47, 0x6c, 0x6f, 0x73, 0x20, 0x43,  // r}Glos C
                0x6f, 0x75, 0x6e, 0x74, 0x79, 0x20, 0x52, 0x61,  // ounty Ra
                0x79, 0x6e, 0x65, 0x74, 0x0d,  // ynet.
            };
            Frame.TryParse(testData, out var frame);
            Asserts.GenericAprs(frame);
        }

        [Fact]
        public void RealFrame_21()
        {
            var testData = new byte[] {
                0x82, 0xa0, 0x9a, 0x92, 0x60, 0x6c, 0x60, 0x9a,  // ....`l`.
                0x60, 0x8e, 0xa2, 0xa6, 0x40, 0x60, 0x9a, 0x84,  // `...@`..
                0x6e, 0xaa, 0x8e, 0x40, 0xe0, 0xae, 0x92, 0x88,  // n..@....
                0x8a, 0x64, 0x40, 0x63, 0x03, 0xf0, 0x40, 0x32,  // .d@c..@2
                0x32, 0x31, 0x37, 0x33, 0x35, 0x7a, 0x35, 0x31,  // 21735z51
                0x32, 0x36, 0x2e, 0x32, 0x37, 0x4e, 0x2f, 0x30,  // 26.27N/0
                0x30, 0x30, 0x35, 0x37, 0x2e, 0x38, 0x33, 0x57,  // 0057.83W
                0x2d, 0x57, 0x58, 0x33, 0x69, 0x6e, 0x31, 0x50,  // -WX3in1P
                0x6c, 0x75, 0x73, 0x32, 0x2e, 0x30, 0x20, 0x55,  // lus2.0 U
                0x3d, 0x31, 0x34, 0x2e, 0x31, 0x56, 0x2c, 0x20,  // =14.1V, 
                0x54, 0x3d, 0x32, 0x39, 0x2e, 0x39, 0x43,  // T=29.9C
            };
            Frame.TryParse(testData, out var frame);
            Asserts.GenericAprs(frame);
        }

        [Fact]
        public void RealFrame_22()
        {
            var testData = new byte[] {
                0x82, 0xa0, 0xa4, 0xa6, 0x40, 0x40, 0x60, 0x9a,  // ....@@`.
                0x84, 0x6e, 0xaa, 0x84, 0x40, 0x60, 0x9a, 0x84,  // .n..@`..
                0x6e, 0xaa, 0x8e, 0x40, 0xe0, 0xae, 0x92, 0x88,  // n..@....
                0x8a, 0x64, 0x40, 0x63, 0x03, 0xf0, 0x3d, 0x35,  // .d@c..=5
                0x31, 0x32, 0x32, 0x2e, 0x37, 0x38, 0x4e, 0x2f,  // 122.78N/
                0x30, 0x30, 0x32, 0x31, 0x39, 0x2e, 0x36, 0x35,  // 00219.65
                0x57, 0x23, 0x20, 0x49, 0x6e, 0x66, 0x6f, 0x20,  // W# Info 
                0x66, 0x72, 0x6f, 0x6d, 0x20, 0x47, 0x34, 0x4b,  // from G4K
                0x56, 0x49, 0x0d,  // VI.
            };
            Frame.TryParse(testData, out var frame);
            Asserts.GenericAprs(frame);
        }

    }
}